<?xml version="1.0" encoding="UTF-8"?>
<crap_result>
  <project/>
  <timestamp>2015-08-08 14:04:07</timestamp>
  <stats>
    <name>Method Crap Stats</name>
    <methodCount>76</methodCount>
    <crapMethodCount>26</crapMethodCount>
    <crapLoad>474</crapLoad>
    <totalCrap>23178.92</totalCrap>
    <crapMethodPercent>34.21</crapMethodPercent>
  </stats>
  <methods>
    <method>
      <package>global</package>
      <className>PHPUnit_TextUI_Command</className>
      <methodName>main</methodName>
      <methodSignature>main($exit = true)</methodSignature>
      <fullMethod>main($exit = true)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_TextUI_Command</className>
      <methodName>run</methodName>
      <methodSignature>run(array $argv, $exit = true)</methodSignature>
      <fullMethod>run(array $argv, $exit = true)</fullMethod>
      <crap>156</crap>
      <complexity>12</complexity>
      <coverage>0</coverage>
      <crapLoad>12</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_TextUI_Command</className>
      <methodName>createRunner</methodName>
      <methodSignature>createRunner()</methodSignature>
      <fullMethod>createRunner()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_TextUI_Command</className>
      <methodName>handleArguments</methodName>
      <methodSignature>handleArguments(array $argv)</methodSignature>
      <fullMethod>handleArguments(array $argv)</fullMethod>
      <crap>10920</crap>
      <complexity>104</complexity>
      <coverage>0</coverage>
      <crapLoad>107</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_TextUI_Command</className>
      <methodName>handleLoader</methodName>
      <methodSignature>handleLoader($loaderClass, $loaderFile = '')</methodSignature>
      <fullMethod>handleLoader($loaderClass, $loaderFile = '')</fullMethod>
      <crap>72</crap>
      <complexity>8</complexity>
      <coverage>0</coverage>
      <crapLoad>8</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_TextUI_Command</className>
      <methodName>handlePrinter</methodName>
      <methodSignature>handlePrinter($printerClass, $printerFile = '')</methodSignature>
      <fullMethod>handlePrinter($printerClass, $printerFile = '')</fullMethod>
      <crap>110</crap>
      <complexity>10</complexity>
      <coverage>0</coverage>
      <crapLoad>10</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_TextUI_Command</className>
      <methodName>handleBootstrap</methodName>
      <methodSignature>handleBootstrap($filename)</methodSignature>
      <fullMethod>handleBootstrap($filename)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_TextUI_Command</className>
      <methodName>handleSelfUpdate</methodName>
      <methodSignature>handleSelfUpdate()</methodSignature>
      <fullMethod>handleSelfUpdate()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_TextUI_Command</className>
      <methodName>showHelp</methodName>
      <methodSignature>showHelp()</methodSignature>
      <fullMethod>showHelp()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_TextUI_Command</className>
      <methodName>handleCustomTestSuite</methodName>
      <methodSignature>handleCustomTestSuite()</methodSignature>
      <fullMethod>handleCustomTestSuite()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_TextUI_Command</className>
      <methodName>printVersionString</methodName>
      <methodSignature>printVersionString()</methodSignature>
      <fullMethod>printVersionString()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_TextUI_Command</className>
      <methodName>showError</methodName>
      <methodSignature>showError($message)</methodSignature>
      <fullMethod>showError($message)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($filename)</methodSignature>
      <fullMethod>__construct($filename)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>__clone</methodName>
      <methodSignature>__clone()</methodSignature>
      <fullMethod>__clone()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>getInstance</methodName>
      <methodSignature>getInstance($filename)</methodSignature>
      <fullMethod>getInstance($filename)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>getFilename</methodName>
      <methodSignature>getFilename()</methodSignature>
      <fullMethod>getFilename()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>getFilterConfiguration</methodName>
      <methodSignature>getFilterConfiguration()</methodSignature>
      <fullMethod>getFilterConfiguration()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>getGroupConfiguration</methodName>
      <methodSignature>getGroupConfiguration()</methodSignature>
      <fullMethod>getGroupConfiguration()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>getListenerConfiguration</methodName>
      <methodSignature>getListenerConfiguration()</methodSignature>
      <fullMethod>getListenerConfiguration()</fullMethod>
      <crap>110</crap>
      <complexity>10</complexity>
      <coverage>0</coverage>
      <crapLoad>10</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>getLoggingConfiguration</methodName>
      <methodSignature>getLoggingConfiguration()</methodSignature>
      <fullMethod>getLoggingConfiguration()</fullMethod>
      <crap>132</crap>
      <complexity>11</complexity>
      <coverage>0</coverage>
      <crapLoad>11</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>getPHPConfiguration</methodName>
      <methodSignature>getPHPConfiguration()</methodSignature>
      <fullMethod>getPHPConfiguration()</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>handlePHPConfiguration</methodName>
      <methodSignature>handlePHPConfiguration()</methodSignature>
      <fullMethod>handlePHPConfiguration()</fullMethod>
      <crap>182</crap>
      <complexity>13</complexity>
      <coverage>0</coverage>
      <crapLoad>13</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>getPHPUnitConfiguration</methodName>
      <methodSignature>getPHPUnitConfiguration()</methodSignature>
      <fullMethod>getPHPUnitConfiguration()</fullMethod>
      <crap>1056</crap>
      <complexity>32</complexity>
      <coverage>0</coverage>
      <crapLoad>33</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>getSeleniumBrowserConfiguration</methodName>
      <methodSignature>getSeleniumBrowserConfiguration()</methodSignature>
      <fullMethod>getSeleniumBrowserConfiguration()</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>getTestSuiteConfiguration</methodName>
      <methodSignature>getTestSuiteConfiguration($testSuiteFilter = null)</methodSignature>
      <fullMethod>getTestSuiteConfiguration($testSuiteFilter = null)</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>getTestSuite</methodName>
      <methodSignature>getTestSuite(DOMElement $testSuiteNode, $testSuiteFilter = null)</methodSignature>
      <fullMethod>getTestSuite(DOMElement $testSuiteNode, $testSuiteFilter = null)</fullMethod>
      <crap>462</crap>
      <complexity>21</complexity>
      <coverage>0</coverage>
      <crapLoad>22</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>getBoolean</methodName>
      <methodSignature>getBoolean($value, $default)</methodSignature>
      <fullMethod>getBoolean($value, $default)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>getInteger</methodName>
      <methodSignature>getInteger($value, $default)</methodSignature>
      <fullMethod>getInteger($value, $default)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>readFilterDirectories</methodName>
      <methodSignature>readFilterDirectories($query)</methodSignature>
      <fullMethod>readFilterDirectories($query)</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>6</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>readFilterFiles</methodName>
      <methodSignature>readFilterFiles($query)</methodSignature>
      <fullMethod>readFilterFiles($query)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Configuration</className>
      <methodName>toAbsolutePath</methodName>
      <methodSignature>toAbsolutePath($path, $useIncludePath = false)</methodSignature>
      <fullMethod>toAbsolutePath($path, $useIncludePath = false)</fullMethod>
      <crap>110</crap>
      <complexity>10</complexity>
      <coverage>0</coverage>
      <crapLoad>10</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Fileloader</className>
      <methodName>checkAndLoad</methodName>
      <methodSignature>checkAndLoad($filename)</methodSignature>
      <fullMethod>checkAndLoad($filename)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Fileloader</className>
      <methodName>load</methodName>
      <methodSignature>load($filename)</methodSignature>
      <fullMethod>load($filename)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Getopt</className>
      <methodName>getopt</methodName>
      <methodSignature>getopt(array $args, $short_options, $long_options = null)</methodSignature>
      <fullMethod>getopt(array $args, $short_options, $long_options = null)</fullMethod>
      <crap>210</crap>
      <complexity>14</complexity>
      <coverage>0</coverage>
      <crapLoad>14</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Getopt</className>
      <methodName>parseShortOption</methodName>
      <methodSignature>parseShortOption($arg, $short_options, &amp;$opts, &amp;$args)</methodSignature>
      <fullMethod>parseShortOption($arg, $short_options, &amp;$opts, &amp;$args)</fullMethod>
      <crap>132</crap>
      <complexity>11</complexity>
      <coverage>0</coverage>
      <crapLoad>11</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_Getopt</className>
      <methodName>parseLongOption</methodName>
      <methodSignature>parseLongOption($arg, $long_options, &amp;$opts, &amp;$args)</methodSignature>
      <fullMethod>parseLongOption($arg, $long_options, &amp;$opts, &amp;$args)</fullMethod>
      <crap>182</crap>
      <complexity>13</complexity>
      <coverage>0</coverage>
      <crapLoad>13</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_XML</className>
      <methodName>prepareString</methodName>
      <methodSignature>prepareString($string)</methodSignature>
      <fullMethod>prepareString($string)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_XML</className>
      <methodName>loadFile</methodName>
      <methodSignature>loadFile($filename, $isHtml = false, $xinclude = false, $strict = false)</methodSignature>
      <fullMethod>loadFile($filename, $isHtml = false, $xinclude = false, $strict = false)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_XML</className>
      <methodName>load</methodName>
      <methodSignature>load($actual, $isHtml = false, $filename = '', $xinclude = false, $strict = false)</methodSignature>
      <fullMethod>load($actual, $isHtml = false, $filename = '', $xinclude = false, $strict = false)</fullMethod>
      <crap>210</crap>
      <complexity>14</complexity>
      <coverage>0</coverage>
      <crapLoad>14</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_XML</className>
      <methodName>nodeToText</methodName>
      <methodSignature>nodeToText(DOMNode $node)</methodSignature>
      <fullMethod>nodeToText(DOMNode $node)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_XML</className>
      <methodName>removeCharacterDataNodes</methodName>
      <methodSignature>removeCharacterDataNodes(DOMNode $node)</methodSignature>
      <fullMethod>removeCharacterDataNodes(DOMNode $node)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_XML</className>
      <methodName>xmlToVariable</methodName>
      <methodSignature>xmlToVariable(DOMElement $element)</methodSignature>
      <fullMethod>xmlToVariable(DOMElement $element)</fullMethod>
      <crap>182</crap>
      <complexity>13</complexity>
      <coverage>0</coverage>
      <crapLoad>13</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_XML</className>
      <methodName>assertValidKeys</methodName>
      <methodSignature>assertValidKeys(array $hash, array $validKeys)</methodSignature>
      <fullMethod>assertValidKeys(array $hash, array $validKeys)</fullMethod>
      <crap>72</crap>
      <complexity>8</complexity>
      <coverage>0</coverage>
      <crapLoad>8</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_XML</className>
      <methodName>convertSelectToTag</methodName>
      <methodSignature>convertSelectToTag($selector, $content = true)</methodSignature>
      <fullMethod>convertSelectToTag($selector, $content = true)</fullMethod>
      <crap>462</crap>
      <complexity>21</complexity>
      <coverage>0</coverage>
      <crapLoad>22</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_XML</className>
      <methodName>cssSelect</methodName>
      <methodSignature>cssSelect($selector, $content, $actual, $isHtml = true)</methodSignature>
      <fullMethod>cssSelect($selector, $content, $actual, $isHtml = true)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_XML</className>
      <methodName>findNodes</methodName>
      <methodSignature>findNodes(DOMDocument $dom, array $options, $isHtml = true)</methodSignature>
      <fullMethod>findNodes(DOMDocument $dom, array $options, $isHtml = true)</fullMethod>
      <crap>7832</crap>
      <complexity>88</complexity>
      <coverage>0</coverage>
      <crapLoad>91</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_XML</className>
      <methodName>getDescendants</methodName>
      <methodSignature>getDescendants(DOMNode $node)</methodSignature>
      <fullMethod>getDescendants(DOMNode $node)</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>6</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_XML</className>
      <methodName>getElementsByCaseInsensitiveTagName</methodName>
      <methodSignature>getElementsByCaseInsensitiveTagName(DOMDocument $dom, $tag)</methodSignature>
      <fullMethod>getElementsByCaseInsensitiveTagName(DOMDocument $dom, $tag)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>PHPUnit_Util_XML</className>
      <methodName>getNodeText</methodName>
      <methodSignature>getNodeText(DOMNode $node)</methodSignature>
      <fullMethod>getNodeText(DOMNode $node)</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($host, $dbname, $username, $password, $charset = 'utf8')</methodSignature>
      <fullMethod>__construct($host, $dbname, $username, $password, $charset = 'utf8')</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>select</methodName>
      <methodSignature>select($tableName)</methodSignature>
      <fullMethod>select($tableName)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>from</methodName>
      <methodSignature>from($from)</methodSignature>
      <fullMethod>from($from)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>where</methodName>
      <methodSignature>where($column, $value = '', $mark = '=', $logical = '&amp;&amp;')</methodSignature>
      <fullMethod>where($column, $value = '', $mark = '=', $logical = '&amp;&amp;')</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>or_where</methodName>
      <methodSignature>or_where($column, $value, $mark = '=')</methodSignature>
      <fullMethod>or_where($column, $value, $mark = '=')</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>join</methodName>
      <methodSignature>join($targetTable, $joinSql, $joinType = 'inner')</methodSignature>
      <fullMethod>join($targetTable, $joinSql, $joinType = 'inner')</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>orderby</methodName>
      <methodSignature>orderby($columnName, $sort = 'ASC')</methodSignature>
      <fullMethod>orderby($columnName, $sort = 'ASC')</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>groupby</methodName>
      <methodSignature>groupby($columnName)</methodSignature>
      <fullMethod>groupby($columnName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>limit</methodName>
      <methodSignature>limit($start, $limit)</methodSignature>
      <fullMethod>limit($start, $limit)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>run</methodName>
      <methodSignature>run($single = false)</methodSignature>
      <fullMethod>run($single = false)</fullMethod>
      <crap>7.33</crap>
      <complexity>6</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>get_where</methodName>
      <methodSignature>get_where()</methodSignature>
      <fullMethod>get_where()</fullMethod>
      <crap>9.29</crap>
      <complexity>9</complexity>
      <coverage>84.62</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>insert</methodName>
      <methodSignature>insert($tableName)</methodSignature>
      <fullMethod>insert($tableName)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>set</methodName>
      <methodSignature>set($columns)</methodSignature>
      <fullMethod>set($columns)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>lastId</methodName>
      <methodSignature>lastId()</methodSignature>
      <fullMethod>lastId()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>update</methodName>
      <methodSignature>update($columnName)</methodSignature>
      <fullMethod>update($columnName)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>delete</methodName>
      <methodSignature>delete($columnName)</methodSignature>
      <fullMethod>delete($columnName)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>done</methodName>
      <methodSignature>done()</methodSignature>
      <fullMethod>done()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>total</methodName>
      <methodSignature>total()</methodSignature>
      <fullMethod>total()</fullMethod>
      <crap>11.3</crap>
      <complexity>5</complexity>
      <coverage>36.84</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>pagination</methodName>
      <methodSignature>pagination($totalRecord, $paginationLimit, $pageParamName)</methodSignature>
      <fullMethod>pagination($totalRecord, $paginationLimit, $pageParamName)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>showPagination</methodName>
      <methodSignature>showPagination($url, $class = 'active')</methodSignature>
      <fullMethod>showPagination($url, $class = 'active')</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>6</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>nextPage</methodName>
      <methodSignature>nextPage()</methodSignature>
      <fullMethod>nextPage()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>prevPage</methodName>
      <methodSignature>prevPage()</methodSignature>
      <fullMethod>prevPage()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Mtkocak\Database</package>
      <className>BasicDB</className>
      <methodName>getSqlString</methodName>
      <methodSignature>getSqlString()</methodSignature>
      <fullMethod>getSqlString()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>ComposerAutoloaderInit41f19e391228bbfbb73db3c63f957969</className>
      <methodName>loadClassLoader</methodName>
      <methodSignature>loadClassLoader($class)</methodSignature>
      <fullMethod>loadClassLoader($class)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>global</package>
      <className>ComposerAutoloaderInit41f19e391228bbfbb73db3c63f957969</className>
      <methodName>getLoader</methodName>
      <methodSignature>getLoader()</methodSignature>
      <fullMethod>getLoader()</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>6</crapLoad>
    </method>
    <method>
      <package>PhpParser</package>
      <className>Autoloader</className>
      <methodName>register</methodName>
      <methodSignature>register($prepend = false)</methodSignature>
      <fullMethod>register($prepend = false)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>PhpParser</package>
      <className>Autoloader</className>
      <methodName>autoload</methodName>
      <methodSignature>autoload($class)</methodSignature>
      <fullMethod>autoload($class)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
  </methods>
</crap_result>
